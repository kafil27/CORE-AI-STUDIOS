rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return request.auth.token.admin == true;
    }

    // Users collection
    match /users/{userId} {
      allow read, write: if request.auth != null && 
        (userId == request.auth.uid || isAdmin());
    }

    // Chats collection
    match /chats/{userId}/{document=**} {
      allow read, write: if isOwner(userId);
    }

    // Usage history
    match /usage_history/{document} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if false;
    }

    // Generation requests queue
    match /generation_queue/{requestId} {
      // Allow reading queue for authenticated users
      allow list: if isAuthenticated();
      allow get: if isAuthenticated();
      
      // Allow creating new requests
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      // Allow updating own requests or if admin
      allow update: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        isAdmin()
      );
      
      // Allow deleting own requests or if admin
      allow delete: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        isAdmin()
      );
    }

    // Generation history
    match /generation_history/{requestId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        isAdmin()
      );
      
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      allow update, delete: if false;
    }

    // API requests tracking
    match /api_requests/{requestId} {
      allow read, write: if isAuthenticated();
    }
  }
} 